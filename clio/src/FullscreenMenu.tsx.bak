import React, { useState, Fragment } from 'react'
import { StyledIcon, SVG } from './fullscreenMenuStyles'
import { StyledMenu } from './fullscreenMenuStyles'
//import { ReactComponent as CloseIcon } from './images/close.svg'
//import { ReactComponent as BackIcon } from './images/back.svg'
import IconChevronLeft from './icons/IconChevronLeft'
import IconClose from './icons/IconChevronLeft'
import IconMenu from './icons/IconMenu'


type FullscreenMenuProps = {
  data?: object,
  position: string,
  iconColor?: string,
}

type BurgerMenuProps = {
  open: boolean,
  setOpen: (isOpen: boolean) => void,
  children?: React.ReactNode,
  position: string,
  iconColor?: string,
}

type MenuProps = {
  open: boolean,
  setOpen: (isOpen: boolean) => void,
  data?: object,
}

export const FullscreenMenu = ({ data, position, iconColor }: FullscreenMenuProps) => {
    const [open, setOpen] = useState(false)
  
    return (
      <BurgerMenu
        open={open}
        setOpen={setOpen}
        position={position}
        iconColor={iconColor}
      >
        <Menu open={open} data={data} setOpen={setOpen}></Menu>
      </BurgerMenu>
    )
  }
  
  function BurgerMenu({ open, setOpen, children, position, iconColor }: BurgerMenuProps) {
    return (
      <Fragment>
        <StyledIcon position={position}>
          <span className='navbar-menu'>
            <div className='menu-btn' onClick={() => setOpen(!open)}>
              <IconMenu/>
            </div>
          </span>
        </StyledIcon>
        {children}
      </Fragment>
    )
  }

  function Menu({ open, setOpen, data }: MenuProps) {
    const [sub, setSub] = useState(false)
  
    const [selectedItemMenu, toggleMenu] = useState(-1)
  
    function openSubMenu(index: number) {
      toggleMenu(selectedItemMenu === index ? -1 : index)
      setSub(!sub)
    }
  
    function returnToBack() {
      setOpen(false)
      setSub(false)
      toggleMenu(-1)
    }

    return (
      <StyledMenu open={open}>
        <div className='remove-icon-mobile' onClick={returnToBack}>
          <IconClose />
        </div>
        <div className='menu_mobile'>
          <ul id='lista' className={sub ? 'move' : ''}>
            <li
            className={item.sub_menu ? 'item-level-1' : ''}
            onClick={() => {
                item.sub_menu ? openSubMenu(index) : null
            }}
            key={`item-${index}`}
            >
            <a href={item.url}>{item.label}</a>
            <SubMenu
                item={item}
                selectedItemMenu={selectedItemMenu}
                index={index}
                setSub={setSub}
            ></SubMenu>
            </li>
          </ul>
        </div>
      </StyledMenu>
    )
  }
  
  function SubMenu({ item, selectedItemMenu, index }) {
    return (
      <Fragment>
        {item.sub_menu && (
          <ul className={`sub-menu ${selectedItemMenu === index ? 'open' : ''}`}>
            <span className='return-level-1'>
              <IconChevronLeft/>
            </span>
            <h3>{item.label}</h3>
            {item.sub_menu &&
              item.sub_menu.map((sub_item, i) => (
                <li key={i}>
                  <a href={sub_item.url}>
                    <h4>{sub_item.label}</h4>
                    <p>{sub_item.sub_title}</p>
                  </a>
                </li>
              ))}
          </ul>
        )}
      </Fragment>
    )
  }

