[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = ["E", "F", "I", "W", "B", "C4", "UP", "ARG001", "SIM", "TCH", "TID", "Q", "FLY", "PERF", "RUF"]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 89

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true

# Set the line length limit used by the formatter.
line-length = 89

[tool.ruff.isort]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Force sort within sections
force-sort-within-sections = true

# Known first party modules
known-first-party = ["calliope"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "calliope"
version = "0.1.0"
description = "Calliope is an experimental agentic framework that brings modern AI tools to interactive art works"
requires-python = ">=3.11"
dependencies = [
    "accelerate>=0.28.0",
    "aiofiles>=23.1.0",
    "aiohttp>=3.10.9",
    "aiostream>=0.4.5",
    "annotated-types>=0.6.0",
    "anyio>=3.7.1",
    "asyncpg>=0.27.0",
    "attrs>=23.1.0",
    "black>=23.3.0",
    "cachetools>=5.3.1",
    "certifi>=2023.7.22",
    "charset-normalizer>=3.2.0",
    "click>=8.1.3",
    "cuid2>=2.0.1",
    "dataclasses-json>=0.5.9",
    "email-validator>=2.0.0",
    "fastapi>=0.104.1",
    "firebase-admin>=6.8.0",
    "google-api-core>=2.11.1",
    "google-api-python-client>=2.170.0",
    "google-auth>=2.21.0",
    "google-auth-httplib2>=0.2.0",
    "google-cloud-core>=2.3.2",
    "google-cloud-firestore>=2.20.2",
    "google-cloud-secret-manager>=2.20.1",
    "google-cloud-storage>=2.10.0",
    "google-cloud-translate>=3.11.1",
    "google-crc32c>=1.5.0",
    "google-resumable-media>=2.5.0",
    "googleapis-common-protos>=1.59.1",
    "grpcio>=1.53.0",
    "grpcio-status>=1.53.0",
    "gunicorn>=21.2.0",
    "h11>=0.14.0",
    "httpcore>=0.17.2",
    "httpx>=0.24.1",
    "huggingface-hub>=0.19.4",
    "idna>=3.4",
    "instructor>=1.5.1",
    "ipython>=8.14.0",
    "jinja2>=3.1.2",
    "jsonschema>=4.20.0",
    "langchain>=0.2.2",
    "langchain-community>=0.2.3",
    "langchain-core>=0.2.4",
    "langchain-pinecone>=0.1.1",
    "langchain-text-splitters>=0.2.1",
    "langsmith>=0.1.74",
    "loguru>=0.7.0",
    "markupsafe>=2.1.3",
    "memray>=1.11.0",
    "modal>=0.51.3298",
    "numpy>=1.25.0",
    "openai>=1.51.0",
    "openapi-schema-pydantic>=1.2.4",
    "opencv-python>=4.6.0.66",
    "orjson>=3.10.3",
    "packaging>=23.2",
    "pandas>=2.2.3",
    "piccolo>=1.7.0",
    "piccolo-admin>=1.4.0",
    "piccolo-api>=1.4.0",
    "pillow>=10.0.0",
    "pinecone>=4.0.0",
    "pinecone-client>=3.2.2",
    "pydantic>=2.9.2",
    "pydantic-core>=2.23.4",
    "pydantic-settings>=2.5.2",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "pyyaml>=6.0",
    "replicate>=0.34.2",
    "requests>=2.32.3",
    "runwayml>=3.0.4",
    "starlette>=0.27.0",
    "tiktoken>=0.4.0",
    "toml>=0.10.2",
    "tqdm>=4.65.0",
    "typer>=0.9.0",
    "typing-extensions>=4.12.2",
    "tzlocal>=5.0.1",
    "uvicorn>=0.22.0",
    "websockets>=13.1",
]

[project.optional-dependencies]
dev = [
    "types-aiofiles>=23.2.0.0",
    "types-certifi>=2021.10.8.3",
    "types-pytz>=2023.3.1.1",
    "types-requests>=2.31.0.5",
    "types-toml>=0.10.8.7",
    "types-tzlocal>=5.1.0.0",
    "types-urllib3>=1.26.25.14",
    "mypy>=1.5.1",
    "pre-commit>=4.2.0",
    "ruff>=0.1.6",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.13",
]

[tool.hatch.build.targets.wheel]
packages = ["calliope"]
